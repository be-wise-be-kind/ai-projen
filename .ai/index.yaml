# Purpose: AI navigation index for ai-projen repository
# Scope: Repository structure, available resources, commands, and documentation
# Overview: Provides AI agents with a quick reference to navigate the ai-projen repository structure,
#     locate key files, understand available commands, and access documentation. Essential for AI agents
#     to quickly orient themselves when working on the framework or understanding how to use it.

version: "1.0"
project:
  name: ai-projen
  type: plugin-framework
  purpose: Create AI-ready repositories through composable plugins
  status: in-development
  version: "0.1.0"

structure:
  orchestrators:
    location: .
    files:
      - CREATE-NEW-AI-REPO.md (coming in PR17)
      - UPGRADE-TO-AI-REPO.md (coming in PR18)
      - ADD-CAPABILITY.md (coming in PR19)

  plugins:
    location: plugins/
    categories:
      foundation: Universal plugins (ai-folder)
      languages: Language-specific tooling (Python, TypeScript)
      infrastructure: Deployment tools (Docker, CI/CD, IaC)
      standards: Quality enforcement (Security, Documentation)
    manifest: plugins/PLUGIN_MANIFEST.yaml
    total_stable: 9
    total_planned: 8

  documentation:
    location: .ai/docs/
    files:
      - PROJECT_CONTEXT.md
      - PLUGIN_ARCHITECTURE.md
      - PLUGIN_DISCOVERY.md
      - MANIFEST_VALIDATION.md
      - AGENTS_MD_EXTENSIBILITY.md
      - DEVELOPMENT_ENVIRONMENT_PHILOSOPHY.md
      - FILE_HEADER_STANDARDS.md
      - HOWTO_STANDARDS.md
      - HOWTO_INTEGRATION.md
      - PR7.7_HOWTO_FRAMEWORK_SUMMARY.md

  howto:
    location: .ai/howto/
    files:
      - how-to-create-a-plugin.md (coming soon)
      - how-to-create-a-language-plugin.md
      - how-to-create-an-infrastructure-plugin.md (coming soon)
      - how-to-create-a-standards-plugin.md (coming soon)

    framework:
      standards: .ai/docs/HOWTO_STANDARDS.md
      integration: .ai/docs/HOWTO_INTEGRATION.md
      template: .ai/templates/HOW_TO_TEMPLATE.md
      purpose: AI-agent-focused step-by-step guides for common tasks

    plugin_howtos:
      languages:
        location: plugins/languages/[plugin]/howtos/
        template: plugins/languages/_template/howtos/HOWTO_TEMPLATE.md
        index: plugins/languages/_template/howtos/README.md

      infrastructure:
        location: plugins/infrastructure/[category]/[plugin]/howtos/
        template: plugins/infrastructure/[category]/_template/howtos/HOWTO_TEMPLATE.md
        index: plugins/infrastructure/[category]/_template/howtos/README.md

      standards:
        location: plugins/standards/[plugin]/howtos/
        template: plugins/standards/_template/howtos/HOWTO_TEMPLATE.md
        index: plugins/standards/_template/howtos/README.md

    discovery:
      # How AI agents discover available how-tos
      - Check plugin manifest for howtos section
      - Read plugin's howtos/README.md for index
      - Search .ai/index.yaml for project-level how-tos
      - Reference agents.md for categorized how-to links

  templates:
    location: .ai/templates/
    files:
      - HOW_TO_TEMPLATE.md (template for creating how-to guides)
      - (additional code templates coming soon)

  roadmap:
    location: roadmap/ai_projen_implementation/
    files:
      - PROGRESS_TRACKER.md
      - AI_CONTEXT.md
      - PR_BREAKDOWN.md

commands:
  # Development commands (when plugins are built)
  test: "make test-all (coming soon)"
  lint: "make lint-all (coming soon)"
  validate: "make validate-manifest (coming soon)"

entry_points:
  new_repo: CREATE-NEW-AI-REPO.md (coming in PR17)
  upgrade_repo: UPGRADE-TO-AI-REPO.md (coming in PR18)
  add_capability: ADD-CAPABILITY.md (coming in PR19)

key_files:
  agents: agents.md (primary AI agent entry point)
  manifest: plugins/PLUGIN_MANIFEST.yaml
  readme: README.md
  gitignore: .gitignore
  env: .env (local only, gitignored)

architecture:
  pattern: Plugin-based framework
  plugin_categories:
    - foundation (universal)
    - languages (language-specific)
    - infrastructure (deployment)
    - standards (quality)

  plugin_structure:
    required:
      - AGENT_INSTRUCTIONS.md
      - README.md
    optional:
      - templates/
      - configs/
      - howtos/

  orchestration:
    - Manifest-driven discovery
    - Interactive question flow
    - Custom roadmap generation
    - Sequential PR execution
    - Resume capability

source_material:
  repository: https://github.com/steve-e-jackson/durable-code-test
  extraction:
    - .ai folder structure
    - Makefile patterns
    - Docker setup
    - GitHub Actions workflows
    - Terraform workspace patterns
    - Pre-commit hooks
    - Standards documentation

development:
  current_phase: Phase 1 - Core Framework
  current_pr: PR3 - Plugin Manifest & Discovery Engine
  next_pr: PR4 - Plugin Template System

  progress:
    total_prs: 21
    completed: 3 (PR0, PR1, PR2)
    in_progress: 1 (PR3)
    remaining: 17

  priorities:
    - P0: Core framework (PR1-4)
    - P1: Language & infrastructure plugins (PR5-12)
    - P2: Standards plugins (PR13-16)
    - P3: Orchestrators (PR17-19)
    - P4: Launch (PR20-21)

contributing:
  guidelines: CONTRIBUTING.md (coming in PR21)
  plugin_creation: .ai/howto/how-to-create-a-plugin.md (coming soon)
  testing: Use test-empty-setup/, test-incremental-setup/, test-upgrade-existing/

notes_for_agents:
  - This is a self-referential repository (it uses the patterns it teaches)
  - All plugins should work standalone (without orchestrator)
  - State is tracked via roadmap/ai_projen_implementation/PROGRESS_TRACKER.md
  - Patterns extracted from durable-code-test (production-proven)
  - Framework grows through community contributions
