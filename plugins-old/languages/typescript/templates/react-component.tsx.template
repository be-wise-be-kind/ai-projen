// Purpose: {{COMPONENT_PURPOSE}} - React component
// Scope: {{COMPONENT_SCOPE}}
// Usage: Copy and replace {{PLACEHOLDERS}}

import React from 'react';
import styles from './{{COMPONENT_NAME}}.module.css';

/**
 * Props for the {{COMPONENT_NAME}} component
 */
interface {{COMPONENT_NAME}}Props {
  /**
   * {{PROP_DESCRIPTION}}
   */
  {{PROP_NAME}}: {{PROP_TYPE}};

  /**
   * Optional CSS class name to apply to the component
   */
  className?: string;

  /**
   * Optional children elements
   */
  children?: React.ReactNode;
}

/**
 * {{COMPONENT_NAME}} component
 *
 * {{COMPONENT_DESCRIPTION}}
 *
 * @example
 * ```tsx
 * <{{COMPONENT_NAME}} {{PROP_NAME}}="{{EXAMPLE_VALUE}}">
 *   Content here
 * </{{COMPONENT_NAME}}>
 * ```
 */
export const {{COMPONENT_NAME}}: React.FC<{{COMPONENT_NAME}}Props> = ({
  {{PROP_NAME}},
  className = '',
  children
}) => {
  return (
    <div className={`${styles.container} ${className}`}>
      {/* {{COMPONENT_IMPLEMENTATION}} */}
      <div className={styles.content}>
        {children}
      </div>
    </div>
  );
};

export default {{COMPONENT_NAME}};

// Template Placeholders:
// {{COMPONENT_PURPOSE}} - Brief purpose of the component (e.g., "Display user information")
// {{COMPONENT_SCOPE}} - Scope of the component (e.g., "User profile section")
// {{COMPONENT_NAME}} - PascalCase component name (e.g., "UserCard")
// {{COMPONENT_DESCRIPTION}} - Detailed description of what the component does
// {{PROP_NAME}} - Name of the main prop (e.g., "userId", "title")
// {{PROP_TYPE}} - TypeScript type (e.g., "string", "number", "User")
// {{PROP_DESCRIPTION}} - Description of the prop's purpose
// {{EXAMPLE_VALUE}} - Example value for the prop
// {{COMPONENT_IMPLEMENTATION}} - Main implementation logic

// Example usage after replacing placeholders:
// 1. Copy this template to your component file
// 2. Replace all {{PLACEHOLDERS}} with actual values
// 3. Add additional props as needed
// 4. Implement component logic
// 5. Add corresponding CSS module
// 6. Test with: make dev-typescript
