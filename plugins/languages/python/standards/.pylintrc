# Purpose: Pylint configuration for comprehensive Python code quality linting
# Scope: Code quality, design patterns, naming conventions, and best practices enforcement
# Overview: Pylint comprehensive linting configuration with production-ready settings from
#     durable-code-test. Balances strictness with practicality for modern Python development.
# Dependencies: pylint
# Exports: Comprehensive code quality linting configuration
# Related: Python code quality standards, design patterns
# Implementation: INI-style pylintrc configuration file

[MASTER]
# Use multiple processes to speed up Pylint
jobs=0

# Pickle collected data for later comparisons
persistent=yes

# Cache directory
cache-dir=/tmp/.pylint_cache

[MESSAGES CONTROL]
# Disable specific messages
disable=
    C0111,  # missing-docstring (too strict, handled by flake8-docstrings)
    C0103,  # invalid-name (too strict for variables)
    C0301,  # line-too-long (handled by ruff formatter)
    R0903,  # too-few-public-methods (valid for dataclasses, DTOs)
    R0913,  # too-many-arguments (sometimes necessary)
    R0902,  # too-many-instance-attributes (valid for complex classes)
    W0212,  # protected-access (sometimes needed for testing)
    E0213,  # no-self-argument (false positive for Pydantic validators)
    W0613,  # unused-argument (false positive for FastAPI handlers)
    C0415,  # import-outside-toplevel (sometimes required for FastAPI)

[REPORTS]
# Output format
output-format=colorized

# Include message ID in output
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

# Reports
reports=no

# Score
score=yes

[REFACTORING]
# Maximum number of nested blocks
max-nested-blocks=5

# Maximum number of branch for function / method body
max-branches=12

[BASIC]
# Naming conventions
good-names=i,j,k,ex,Run,_,id,db,pk,ui

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

[FORMAT]
# Maximum line length
max-line-length=120

# Maximum number of characters on a single line
max-module-lines=1000

# String used for indentation
indent-string='    '

# Expected indent for hanging elements
indent-after-paren=4

[DESIGN]
# Maximum number of arguments for function / method
max-args=5

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class
max-parents=7

# Maximum number of attributes for a class
max-attributes=10

# Minimum number of public methods for a class
min-public-methods=1

# Maximum number of public methods for a class
max-public-methods=20

[IMPORTS]
# Deprecated modules
deprecated-modules=optparse,imp

# Force import order to recognize a module as being a local folder
known-third-party=

[EXCEPTIONS]
# Exceptions that will emit a warning when caught
overgeneral-exceptions=builtins.Exception
