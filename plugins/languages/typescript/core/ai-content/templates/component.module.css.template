/*
Purpose: Template for React component CSS Module - scoped component styling

Scope: Component-specific styles with CSS Modules for style encapsulation

Overview: Generates a comprehensive CSS Module stylesheet for React components with scoped
    class names, responsive design patterns, dark mode support, loading and error states,
    and accessibility considerations. Provides base styling for common component elements
    including container, content areas, headers, buttons, and state-specific styles. Includes
    responsive breakpoints for mobile adaptation, dark mode media query support, smooth
    transitions for interactive elements, and proper disabled state styling. Follows modern
    CSS best practices with flexbox layouts, CSS custom properties for theming potential,
    and proper focus states for keyboard accessibility. The generated styles integrate with
    React components through CSS Modules for automatic class name scoping and collision prevention.

Dependencies: CSS Modules support in bundler (Vite, webpack, etc.), modern browser CSS support

Exports: Scoped CSS classes for container, content, header, title, button, loading, spinner,
    error states, with responsive and dark mode variants

Placeholders:
    - {{COMPONENT_NAME}}: Component name in PascalCase for filename (e.g., "UserCard", "ProductList")
    - {{COMPONENT_SCOPE}}: Brief description of component's UI scope (e.g., "User profile display", "Product listing")
    - {{CONTAINER_DESCRIPTION}}: Description of main container element's purpose
    - {{CONTENT_DESCRIPTION}}: Description of content area element's purpose
    - {{HEADER_DESCRIPTION}}: Description of header section element's purpose
    - {{BUTTON_DESCRIPTION}}: Description of button element's purpose

Usage: Copy template to component directory as ComponentName.module.css, replace placeholders, customize styles, import in component with 'import styles from ./ComponentName.module.css'

Related: react-component.tsx.template for basic components, react-component-with-hooks.tsx.template for stateful components

Implementation: Uses CSS Modules for scoping, flexbox for layouts, media queries for responsive and dark mode, BEM-like naming within module scope
*/

.container {
  /* {{CONTAINER_DESCRIPTION}} */
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  background: #ffffff;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.content {
  /* {{CONTENT_DESCRIPTION}} */
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.header {
  /* {{HEADER_DESCRIPTION}} */
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #e0e0e0;
}

.title {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
  color: #333333;
}

.button {
  /* {{BUTTON_DESCRIPTION}} */
  padding: 0.5rem 1rem;
  background: #007bff;
  color: #ffffff;
  border: none;
  border-radius: 4px;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: background 0.2s ease;
}

.button:hover {
  background: #0056b3;
}

.button:active {
  background: #004085;
}

.button:disabled {
  background: #cccccc;
  cursor: not-allowed;
}

/* Loading state */
.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 200px;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #f3f3f3;
  border-top: 4px solid #007bff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Error state */
.error {
  background: #fff5f5;
  border: 1px solid #feb2b2;
}

.errorMessage {
  margin: 0;
  color: #c53030;
  font-size: 0.875rem;
}

.retryButton {
  margin-top: 0.5rem;
  padding: 0.375rem 0.75rem;
  background: #c53030;
  color: #ffffff;
  border: none;
  border-radius: 4px;
  font-size: 0.875rem;
  cursor: pointer;
}

.retryButton:hover {
  background: #9b2c2c;
}

/* Responsive design */
@media (max-width: 768px) {
  .container {
    padding: 0.75rem;
  }

  .title {
    font-size: 1.125rem;
  }

  .button {
    padding: 0.375rem 0.75rem;
    font-size: 0.8125rem;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .container {
    background: #1a1a1a;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  .title {
    color: #f0f0f0;
  }

  .header {
    border-bottom-color: #333333;
  }

  .error {
    background: #2d1a1a;
    border-color: #5c2020;
  }
}

